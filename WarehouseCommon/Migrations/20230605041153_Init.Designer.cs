// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using 창고Common;

#nullable disable

namespace WarehouseCommon.Migrations
{
    [DbContext(typeof(창고DbContext))]
    [Migration("20230605041153_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("창고Common.입고상품", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("창고Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("창고상품Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("창고Id");

                    b.HasIndex("창고상품Id");

                    b.ToTable("입고상품");
                });

            modelBuilder.Entity("창고Common.적재상품", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("입고상품Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("창고Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("창고상품Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("입고상품Id");

                    b.HasIndex("창고Id");

                    b.HasIndex("창고상품Id");

                    b.ToTable("적재상품");
                });

            modelBuilder.Entity("창고Common.창고", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Code")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("창고");
                });

            modelBuilder.Entity("창고Common.창고상품", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("창고Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("창고Id");

                    b.ToTable("창고상품");
                });

            modelBuilder.Entity("창고Common.출고상품", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("입고상품Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("적재상품Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("창고Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("창고상품Id")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("입고상품Id");

                    b.HasIndex("적재상품Id");

                    b.HasIndex("창고Id");

                    b.HasIndex("창고상품Id");

                    b.ToTable("출고상품");
                });

            modelBuilder.Entity("창고Common.입고상품", b =>
                {
                    b.HasOne("창고Common.창고", "창고")
                        .WithMany("입고상품들")
                        .HasForeignKey("창고Id");

                    b.HasOne("창고Common.창고상품", "창고상품")
                        .WithMany("입고상품들")
                        .HasForeignKey("창고상품Id");

                    b.Navigation("창고");

                    b.Navigation("창고상품");
                });

            modelBuilder.Entity("창고Common.적재상품", b =>
                {
                    b.HasOne("창고Common.입고상품", "입고상품")
                        .WithMany("적재상품들")
                        .HasForeignKey("입고상품Id");

                    b.HasOne("창고Common.창고", "창고")
                        .WithMany("적재상품들")
                        .HasForeignKey("창고Id");

                    b.HasOne("창고Common.창고상품", "창고상품")
                        .WithMany("적재상품들")
                        .HasForeignKey("창고상품Id");

                    b.Navigation("입고상품");

                    b.Navigation("창고");

                    b.Navigation("창고상품");
                });

            modelBuilder.Entity("창고Common.창고상품", b =>
                {
                    b.HasOne("창고Common.창고", "창고")
                        .WithMany("창고상품들")
                        .HasForeignKey("창고Id");

                    b.Navigation("창고");
                });

            modelBuilder.Entity("창고Common.출고상품", b =>
                {
                    b.HasOne("창고Common.입고상품", "입고상품")
                        .WithMany("출고상품들")
                        .HasForeignKey("입고상품Id");

                    b.HasOne("창고Common.적재상품", "적재상품")
                        .WithMany("출고상품들")
                        .HasForeignKey("적재상품Id");

                    b.HasOne("창고Common.창고", "창고")
                        .WithMany("출고상품들")
                        .HasForeignKey("창고Id");

                    b.HasOne("창고Common.창고상품", "창고상품")
                        .WithMany("출고상품들")
                        .HasForeignKey("창고상품Id");

                    b.Navigation("입고상품");

                    b.Navigation("적재상품");

                    b.Navigation("창고");

                    b.Navigation("창고상품");
                });

            modelBuilder.Entity("창고Common.입고상품", b =>
                {
                    b.Navigation("적재상품들");

                    b.Navigation("출고상품들");
                });

            modelBuilder.Entity("창고Common.적재상품", b =>
                {
                    b.Navigation("출고상품들");
                });

            modelBuilder.Entity("창고Common.창고", b =>
                {
                    b.Navigation("입고상품들");

                    b.Navigation("적재상품들");

                    b.Navigation("창고상품들");

                    b.Navigation("출고상품들");
                });

            modelBuilder.Entity("창고Common.창고상품", b =>
                {
                    b.Navigation("입고상품들");

                    b.Navigation("적재상품들");

                    b.Navigation("출고상품들");
                });
#pragma warning restore 612, 618
        }
    }
}
